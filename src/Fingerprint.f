
HEX
\***CONSTANT***\
100 CONSTANT IMG_WIDTH
9000 CONSTANT IMAGE_SIZE
12000 CONSTANT BITMAP_SIZE
303 CONSTANT START_BLURRING
\***ARRAY***\
CREATE PACKTOSEND EF , 01 , FF , FF , FF , FF , 01 , 00 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 
CREATE PACKTOREC -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
CREATE IMAGE IMAGE_SIZE CELLS ALLOT
CREATE 32BITMAP BITMAP_SIZE CELLS ALLOT
\***VARAIBLE***\
VARIABLE ID 
VARIABLE SIZE
VARIABLE CHECKSUM
VARIABLE FINGER_COUNT
\***UTILITY***\
: WAIT ( -- ) 0 BEGIN 1 1+ DROP 1+ DUP A0000 = UNTIL DROP ;
: WAITSHORT ( -- ) 0 BEGIN 1 1+ DROP 1+ DUP A000 = UNTIL DROP ;
: R@ ( -- n ) R> R> DUP >R SWAP >R ;
\***BYTES MANIUPULATION***\
: DIVIDEBYTES ( n -- n1 n2 ) DUP 8 RSHIFT SWAP FF AND ;
: 1BYTE2BYTE ( n -- n1 n2 ) DUP F0 AND SWAP F AND ;
: RESTOREBYTES ( n -- n1 n2 ) 1BYTE2BYTE 4 LSHIFT ;
: 8TO32 ( n1 -- n1n1n1 ) DUP 8 LSHIFT DUP 8 LSHIFT OR OR ;
\***ARRAY MANIUPULATION***\
: READ_ARRAY_N ( arrayname pos -- val ) CELLS + @ ;
: READ_ARRAY ( arrayname size -- ) 
	0 BEGIN 
		2 PICK OVER READ_ARRAY_N . 
	1+ 2DUP = UNTIL DROP 2DROP ;
: WRITE_ARRAY_N ( arrayname pos val -- ) -ROT CELLS + ! ;
: WRITE_ARRAY ( a1 a2 ... an  arrayname n -- ) 
	BEGIN 
		ROT OVER 1- SWAP 3 PICK -ROT WRITE_ARRAY_N 1- DUP 
	0= UNTIL 2DROP ;
: SIZE_W/0_CHECK ( -- size ) SIZE @ 2- ;
: ARRAY_OFFSET ( arrayname offeset -- arrayname+offset ) CELLS + ;
\***COMMUNICATION***\
: DROP_N_READ ( N -- ) 
	0 BEGIN 
		SERIAL_READ DUP 
		-1 = IF ." TIMEOUT-OCCURRED WHILE TRYING TO READ. ENDING AT: " SWAP . -ROT 2DROP EXIT 
		THEN DROP 
	1+ 2DUP = UNTIL 2DROP ;
: RECEIVEWRITE ( size -- ) 
	PACKTOREC SWAP 0 BEGIN 
		SERIAL_READ DUP 
		-1 = IF ." TIMEOUT-OCCURRED WHILE TRYING TO READ. ENDING AT: " SWAP . -ROT 2DROP EXIT 
		THEN 3 PICK SWAP 2 PICK SWAP WRITE_ARRAY_N 
	1+ DUP 2 PICK = UNTIL 
	DROP 2DROP ;
: SEND_N ( arrayname size -- ) 
	0 BEGIN 
		DUP 3 PICK SWAP READ_ARRAY_N SERIAL_WRITE 1+ DUP 
	2 PICK = UNTIL 
	DROP 2DROP ;
\***PACKET MANIUPULATION***\
: CALCULATE_CHECKSUM ( size -- )  
	0 CHECKSUM ! 6 BEGIN 
		PACKTOSEND OVER READ_ARRAY_N CHECKSUM +! 
	1+ 2DUP = UNTIL 2DROP ;
: WRITE_PACKET ( a1 a2 ... an n -- )
	PACKTOSEND 8 CELLS + SWAP WRITE_ARRAY
	SIZE_W/0_CHECK CALCULATE_CHECKSUM
	PACKTOSEND SIZE_W/0_CHECK CHECKSUM @ DIVIDEBYTES
	2SWAP CELLS + 2 WRITE_ARRAY ;
: WRITESEND ( a1 a2 ... an n -- )
	DUP PICK 9 + SIZE !
	WRITE_PACKET PACKTOSEND SIZE @ SEND_N  ;
\***RECEIVE PACKET MANIUPULATION***\
: TAKE_ID ( -- ID ) PACKTOREC B READ_ARRAY_N ;
: SHOW_ACK ( size -- ) ." ACK-PACK: " PACKTOREC SWAP READ_ARRAY CR ;
: CHECK_CONFIRMATION ( -- value ) PACKTOREC 9 READ_ARRAY_N ;
: SHOW_CONFIRMATION ( -- ) 
	CLR_INDICATIONS CHECK_CONFIRMATION 
	CASE 
		0 OF CORRECT ENDOF 
		1 OF ERROR ENDOF
		2 OF NOFINGER ERROR ENDOF
		3 OF FAIL ERROR ENDOF
		9 OF NOMATCH ERROR ENDOF
		A OF FAILCOMBINE ERROR ENDOF
		24 OF ALREADYREG ENDOF
		56 OF FIRSTACQ ENDOF
		ERROR
	ENDCASE ; 
: SEND_RECEIVE_ACK ( size a1 a2 ... an n -- ) WRITESEND DUP RECEIVEWRITE DUP -1 <> IF SHOW_ACK ELSE DROP THEN ;
: SEND_RECEIVE_SHOW ( size a1 a2 ... an n -- ) WRITESEND DUP RECEIVEWRITE DUP -1 <> IF SHOW_ACK ELSE DROP THEN SHOW_CONFIRMATION ;
\***IMAGES MANIUPULATION***\
: STORE_IMAGE ( -- )
	IMAGE IMAGE_SIZE 9 DROP_N_READ CR 0 BEGIN 
		DUP 0> IF DUP 80 MOD 
			0= IF 
				NEXT_PROGRESS B DROP_N_READ 
			THEN 
		THEN SERIAL_READ DUP 
		-1 = IF 
			." TIMEOUT-OCCURRED WHILE TRYING TO READ. ENDING AT: " DROP . EXIT 
		THEN 3 PICK SWAP 2 PICK SWAP WRITE_ARRAY_N 
	1+ DUP 2 PICK = UNTIL 
	2 DROP_N_READ DROP 2DROP ;
: ELABORATE_IMAGE 
	0 BEGIN 
		IMAGE OVER READ_ARRAY_N RESTOREBYTES >R 8TO32 R> 8TO32 32BITMAP 3 PICK 2* ARRAY_OFFSET 2 WRITE_ARRAY 
		1+ DUP DUP 2E1 MOD 
		0= IF 
			NEXT_PROGRESS 
		THEN 
	IMAGE_SIZE = UNTIL 
	DROP ;
: BLURRINGMASK ( Pos -- ) 32BITMAP SWAP READ_ARRAY_N FF AND + SWAP ;
: 50DUP ( value -- ) DUP 0 BEGIN >R 2DUP R> 1+ DUP 18 = UNTIL DROP ;
: BLURRING7  ( -- )
	START_BLURRING BEGIN
		DUP IMG_WIDTH MOD FD = IF 6 + THEN 50DUP
		IMG_WIDTH 3 * - 3 - 32BITMAP SWAP READ_ARRAY_N FF AND SWAP
		IMG_WIDTH 3 * - 2 - BLURRINGMASK
		IMG_WIDTH 3 * - 1 - BLURRINGMASK
		IMG_WIDTH 3 * -     BLURRINGMASK
		IMG_WIDTH 3 * - 1 + BLURRINGMASK
		IMG_WIDTH 3 * - 2 + BLURRINGMASK
		IMG_WIDTH 3 * - 3 + BLURRINGMASK
		IMG_WIDTH 2 * - 3 - BLURRINGMASK
		IMG_WIDTH 2 * - 2 - BLURRINGMASK
		IMG_WIDTH 2 * - 1 - BLURRINGMASK
		IMG_WIDTH 2 * -     BLURRINGMASK
		IMG_WIDTH 2 * - 1 + BLURRINGMASK
		IMG_WIDTH 2 * - 2 + BLURRINGMASK
		IMG_WIDTH 2 * - 3 + BLURRINGMASK
		IMG_WIDTH - 3 - BLURRINGMASK
		IMG_WIDTH - 2 - BLURRINGMASK
		IMG_WIDTH - 1 - BLURRINGMASK
		IMG_WIDTH -     BLURRINGMASK
		IMG_WIDTH - 1 + BLURRINGMASK
		IMG_WIDTH - 2 + BLURRINGMASK
		IMG_WIDTH - 3 + BLURRINGMASK
		3 - BLURRINGMASK
		2 - BLURRINGMASK
		1 - BLURRINGMASK
		    BLURRINGMASK
		1 + BLURRINGMASK
		2 + BLURRINGMASK
		3 + BLURRINGMASK
		IMG_WIDTH + 3 - BLURRINGMASK
		IMG_WIDTH + 2 - BLURRINGMASK
		IMG_WIDTH + 1 - BLURRINGMASK
		IMG_WIDTH +     BLURRINGMASK
		IMG_WIDTH + 1 + BLURRINGMASK
		IMG_WIDTH + 2 + BLURRINGMASK
		IMG_WIDTH + 3 + BLURRINGMASK
		IMG_WIDTH 2 * +  3 - BLURRINGMASK
		IMG_WIDTH 2 * +  2 - BLURRINGMASK
		IMG_WIDTH 2 * +  1 - BLURRINGMASK
		IMG_WIDTH 2 * +      BLURRINGMASK
		IMG_WIDTH 2 * +  1 + BLURRINGMASK
		IMG_WIDTH 2 * +  2 + BLURRINGMASK
		IMG_WIDTH 2 * +  3 + BLURRINGMASK
		IMG_WIDTH 3 * +  3 - BLURRINGMASK
		IMG_WIDTH 3 * +  2 - BLURRINGMASK
		IMG_WIDTH 3 * +  1 - BLURRINGMASK
		IMG_WIDTH 3 * +      BLURRINGMASK
		IMG_WIDTH 3 * +  1 + BLURRINGMASK
		IMG_WIDTH 3 * +  2 + BLURRINGMASK
		IMG_WIDTH 3 * +  3 + 32BITMAP SWAP READ_ARRAY_N FF AND + 
		31 / 8TO32 32BITMAP 2 PICK ROT WRITE_ARRAY_N
	1+ DUP 2DUP 703 MOD 0= IF NEXT_PROGRESS DROP ELSE DROP THEN 11CFD = UNTIL
	DROP ;
\***SENSOR'S FUNCTIONS***\
: TAKE_FINGER_COUNT ( -- ) E 03 1D 2 WRITESEND RECEIVEWRITE PACKTOREC B READ_ARRAY_N FINGER_COUNT ! ;
: LED_ON ( -- ) C 03 50 2 SEND_RECEIVE_ACK ;
: LED_OFF ( -- ) C 03 51 2 SEND_RECEIVE_ACK ;
: CAPTURE_IMAGE ( -- ) C 03 01 2 SEND_RECEIVE_ACK ;
: UPLOAD_IMAGE ( -- ) C 03 0A 2 SEND_RECEIVE_ACK STORE_IMAGE ;
: SEARCH_ALL ( -- ) 10 08 55 3E 00 00 00 0A 7 WRITESEND DUP WAIT RECEIVEWRITE DUP
	-1 <> IF 
		SHOW_ACK 
	ELSE DROP 				
	THEN ; 
: DELETE_ALL ( -- ) C 07 0C 00 01 00 1BYTE2BYTE 6 SEND_RECEIVE_ACK ;
: DELETE_USERS ( -- ) C 07 0C 00 01 FINGER_COUNT @ 1BYTE2BYTE 6 SEND_RECEIVE_ACK ;
: AUTO_ENROLL ( -- ) C 08 54 3E 62 00 FINGER_COUNT @ 00 7 WRITESEND DUP WAIT RECEIVEWRITE DUP
	-1 <> IF 
		DUP SHOW_ACK SHOW_CONFIRMATION CHECK_CONFIRMATION 
		56 = IF 
			WAIT DUP RECEIVEWRITE DUP
			-1 <> IF 
				CLR_MESSAGE SHOW_ACK CR CHECK_CONFIRMATION 
				0= IF 
					REGOK TAKE_FINGER_COUNT FINGER_COUNT @ SHOW_ID
				ELSE
					SHOW_CONFIRMATION
				THEN
			THEN
		ELSE DROP 
		THEN 
	ELSE DROP 				
	THEN ;
: SET_BAUD ( value -- ) C 05 0E 04 4 PICK 4 SEND_RECEIVE_SHOW DROP ;
: READ_SYS_PARAM ( -- ) 1C 3 F 2 SEND_RECEIVE_ACK ;
\***FUNCTIONS***\
: SHOW_IMAGE_HDMI_CENTERED ( -- ) 
	IMAGE_POSITION 0 DUP BEGIN 
		2 PICK OVER ROW_SIZE * + ROT 
		BEGIN 
			SWAP 32BITMAP 2 PICK READ_ARRAY_N OVER ! PIXEL_SIZE + SWAP 1+ DUP 100 MOD 
		0= UNTIL 
		-ROT DROP 1+ DUP 
	120 = UNTIL 
	2DROP DROP ;
: CAPTURE_UPLOAD_ELABORATE_SHOW ( -- ) LOADING_BAR IMAGE_WINDOW CLR_PROGRESS_BAR DOWNLOADING CAPTURE_IMAGE UPLOAD_IMAGE CLR_MESSAGE ELABORATE_IMAGE CLR_MESSAGE BLURRING BLURRING7 SHOW_IMAGE_HDMI_CENTERED ;
: CHECK_ADMIN ( -- RESULT ) 
	SEARCH_ALL CHECK_CONFIRMATION 0= IF
		TAKE_ID
		0= IF 
			." ADMIN PERMISSION GRANTED " ADMINGRANTED -1
		ELSE 
			." ADMIN PERMISSION DENIED " NOTADMIN ERROR 0
		THEN 
	ELSE
		SHOW_CONFIRMATION 0
	THEN ;
: SETBAUD ( value -- ) 
	DUP C < OVER 1 > AND IF
		DUP SET_BAUD CHECK_CONFIRMATION 0= IF 2580 * CHANGEBAUD ELSE ." ERROR TO SET BAUD ON SENSOR " DROP THEN 
  	ELSE 
	  	." ERROR NUMBER MUST BE BEETWEN 1 AND 12 " DROP
	THEN ;
: INSERT_ADMIN ( -- )
	." NEED TO CHECK ADMIN PRIVILEGES " CR CHECK_ADMIN IF
		." ADMIN GRANTED, INSERT NEW ADMIN FINGER " CR 
		0 FINGER_COUNT ! AUTO_ENROLL TAKE_FINGER_COUNT
	THEN ;
\***INTERECTIVE FUNCTIONS***\
: MENU_CHOICE ( -- ) CR CR CR CR CR CR ." USE CH_N WHICH 'N' IS THE NUMBER OF YOUR CHOICE, THEN USE 'BACK' TO GO TO MAIN MENU" CR ." (E.G. CH_1 FOR LOGIN): " ;
: CH_1 ( -- )
	1 CHOICE CR 
	SEARCH_ALL CLR_INDICATIONS CHECK_CONFIRMATION 0 = IF TAKE_ID SHOW_ID THEN SHOW_CONFIRMATION ;
: CH_2 ( -- )
	2 CHOICE CR CHECK_ADMIN IF
		BLUE PUT_FINGER 2DROP AUTO_ENROLL
	THEN ;
: CH_3 ( -- )
	3 CHOICE CR
	CLR_PROGRESS_BAR CLR_IMAGE LOADING_BAR IMAGE_WINDOW  
	WAITSHORT CAPTURE_IMAGE CLR_INDICATIONS CHECK_CONFIRMATION 
	0= IF 
		DOWNLOADING UPLOAD_IMAGE CLR_MESSAGE RESTORING ELABORATE_IMAGE CLR_MESSAGE BLURRING BLURRING7 CLR_MESSAGE DONE SHOW_IMAGE_HDMI_CENTERED 
	ELSE
		CLR_MESSAGE SHOW_CONFIRMATION
	THEN ;
: CH_4 ( -- )
	4 CHOICE CR CHECK_ADMIN IF
		DELETE_USERS CHECK_CONFIRMATION 
		0= IF 
			DELETED 
		ELSE
			SHOW_CONFIRMATION
		THEN TAKE_FINGER_COUNT
	THEN ;
: CH_5 ( -- ) 
	5 CHOICE WAIT SCREEN_BLACK CR CR ." TYPE 'START' TO POWER ON " CR CR ;
: START ( -- ) INIT TAKE_FINGER_COUNT CLR_PIJ WHITE MENU MENU_CHOICE ; 
: BACK ( -- ) CLR_CHOICE CLR_RESULT CLR_MESSAGE CLR_IMAGE CLR_PROGRESS_BAR WHITE MENU MENU_CHOICE ;
